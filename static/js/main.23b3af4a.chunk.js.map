{"version":3,"sources":["css/dashboard.scss","components/NavBar.jsx","components/Event.jsx","components/Calendar.jsx","components/Dashboard.jsx","components/UserProfile.jsx","components/SignUp.jsx","components/Layout.jsx","components/SignIn.jsx","components/Main.jsx","fbconfig.js","App.js","serviceWorker.js","index.js","index.scss"],"names":["module","exports","primary","secondary","NavBar","logout","firebase","auth","signOut","console","log","react_default","a","createElement","className","index_es","position","Icon_default","Link","to","onClick","this","Component","Event","state","title","mapPropsToState","_this","setState","delbtn","props","ready","delete","start","event","end","handleTitleChange","ev","Object","defineProperty","target","id","value","handleTimeChange","date","time","mins","getMinutes","hours","getHours","newDate","Date","setHours","setMinutes","handleSubmit","preventDefault","open","onClose","handleDelete","handleClose","_this2","aria-labelledby","onRendered","onSubmit","margin","required","fullWidth","htmlFor","name","autoComplete","autoFocus","onChange","material_ui_time_picker_lib_default","type","variant","color","textbtn","React","localizer","BigCalendar","momentLocalizer","moment","DragAndDropCalendar","withDragAndDrop","Calendar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","readEventsfromGCal","functions","httpsCallable","readEvents","maxResults","then","res","events","data","map","newStart","dateTime","newEnd","push","summary","meta","openCreateModal","openCreate","actualEvent","createEvent","toISOString","addEvent","eventName","startTime","endTime","openEditModal","openEdit","closeEditModal","deleteEvent","editEvent","_ref","idx","indexOf","newEvent","objectSpread","nextEvents","toConsumableArray","splice","updateEvent","_ref2","eventId","render","selectable","onEventDrop","onSelectSlot","onSelectEvent","defaultView","Views","WEEK","step","timeslots","min","max","style","height","Event_Event","bind","assertThisInitialized","setInterval","Dashboard","Calendar_Calendar","UserProfile","match","params","SignUp","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","email","password","firstName","lastName","authError","handleChange","createUserWithEmailAndPassword","catch","err","message","inherits","createClass","key","Layout","components_NavBar","BrowserRouter","basename","process","Switch","Route","exact","path","Redirect","component","SignIn","signInWithEmailAndPassword","fb","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Main","user","onAuthStateChanged","App","styles","theme","components_Main","createMuiTheme","palette","main","variables","typography","useNextVariants","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.23b3af4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#f44336\",\"secondary\":\"#cddc39\"};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { AppBar, Toolbar, IconButton, Button } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nclass NavBar extends Component {\r\n\r\n    logout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n        console.log();\r\n\r\n        return (\r\n            <div className=\"navbar\"  >\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton>\r\n                            <Icon> menu </Icon>\r\n                        </IconButton>\r\n                        <Link className=\"element\" to='/db' >myReactapp</Link>\r\n                        <Link className=\"btn\" to='/db' ><Button onClick={this.logout} > Log Out </Button></Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport TimeInput from 'material-ui-time-picker'\r\n\r\nimport { Button, FormControl, Input, InputLabel, Modal, IconButton } from '@material-ui/core';\r\n\r\nexport default class Event extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n    };\r\n\r\n    mapPropsToState = () => {\r\n        this.setState({\r\n            delbtn: this.props.delbtn,\r\n            ready: this.props.ready,\r\n            delete: this.props.delete,\r\n            start: this.props.event.start,\r\n            end: this.props.event.end,\r\n            title: this.props.event.title,\r\n        });\r\n    }\r\n    handleTitleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n    }\r\n    handleTimeChange = (date, time) => {\r\n        var mins = date.getMinutes();\r\n        var hours = date.getHours();\r\n        var newDate = new Date(this.state[time]);\r\n        newDate.setHours(hours)\r\n        newDate.setMinutes(mins)\r\n        this.setState({ [time]: newDate });\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.setState({ open: false, ready: true }, () => {\r\n            this.props.onClose(this.state);\r\n        })\r\n    }\r\n    handleDelete = () => {\r\n        this.setState({ open: false, delete: true }, () => {\r\n            this.props.onClose(this.state);\r\n        });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false }, () => {\r\n            this.props.onClose(this.state);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                onRendered={this.mapPropsToState}\r\n            >\r\n                <div className=\"eventModal\"  >\r\n                    <div className=\"header\" >\r\n                        <h3 id=\"form-dialog-title\"> {this.props.title} </h3>\r\n                        {this.state.delbtn ? <IconButton onClick={this.handleDelete} ><i className=\"material-icons\">delete</i></IconButton > : <div></div>}\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <FormControl className=\"titleinput\" margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"title\">Event title</InputLabel>\r\n                            <Input id=\"title\" name=\"title\" autoComplete=\"title\" autoFocus onChange={this.handleTitleChange} value={this.state.title} />\r\n                        </FormControl>\r\n                        <div className=\"pickers\">\r\n                            <span>Start time</span>\r\n                            <span>End time</span>\r\n                            <TimeInput\r\n                                className=\"timepicker\"\r\n                                value={this.state.start}\r\n                                onChange={(date) => this.handleTimeChange(date, 'start')}\r\n                            />\r\n                            <TimeInput\r\n                                className=\"timepicker\"\r\n                                value={this.state.end}\r\n                                onChange={(date) => this.handleTimeChange(date, 'end')}\r\n                            />\r\n                        </div>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >{this.props.textbtn} </Button>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport BigCalendar from 'react-big-calendar'\r\nimport firebase from 'firebase/app';\r\n\r\nimport Event from './Event';\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/es-us'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar)\r\n\r\nexport default class Calendar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            events: [],\r\n            openCreate: false,\r\n            openEdit: false,\r\n            actualEvent: null\r\n        }\r\n        this.editEvent = this.editEvent.bind(this)\r\n        this.openCreateModal = this.openCreateModal.bind(this)\r\n        this.openEditModal = this.openEditModal.bind(this)\r\n        this.readEventsfromGCal();\r\n        setInterval(this.readEventsfromGCal, 3600000)\r\n    }\r\n\r\n    readEventsfromGCal = () => {\r\n        const readEvents = firebase.functions().httpsCallable('readEvents');\r\n        readEvents({ maxResults: 250 }).then(res => {\r\n            let events = [];\r\n            res.data.map(event => {\r\n                // GCal date is an ISO string \"2019-01-12T18:00:00.000Z\" \r\n                // we need to conver to Date object \"Sat Jan 12 2019 12:00:00 GMT-0600 (hora estándar central)\" for BigCal\r\n                const newStart = new Date(event.start.dateTime)\r\n                const newEnd = new Date(event.end.dateTime)\r\n                events.push({\r\n                    title: event.summary,\r\n                    meta: event,\r\n                    start: newStart,\r\n                    end: newEnd,\r\n                    id: event.id\r\n                })\r\n                return events\r\n            })\r\n            this.setState({ events }, () => console.log(this.state.events))\r\n        })\r\n    }\r\n\r\n    openCreateModal = (ev) => {\r\n        this.setState({ openCreate: true, actualEvent: { start: ev.start, end: ev.end, title: '' } });\r\n    }\r\n    createEvent = (event) => {\r\n        this.setState({ openCreate: false });\r\n        if (event.ready) {\r\n            // let newEvent = {\r\n            //     title: event.title,\r\n            //     start: event.start,\r\n            //     end: event.end,\r\n            // }\r\n            // this.setState({\r\n            //     events: this.state.events.concat([newEvent]),\r\n            // })\r\n            // BigCal date is an Date object \"Sat Jan 12 2019 12:00:00 GMT-0600 (hora estándar central)\"\r\n            // we need to conver to ISOString \"2019-01-12T18:00:00.000Z\" for GCal\r\n            let start = event.start.toISOString()\r\n            let end = event.end.toISOString()\r\n            const addEvent = firebase.functions().httpsCallable('addEventToCalendar');\r\n            addEvent({\r\n                \"eventName\": event.title,\r\n                \"startTime\": start,\r\n                \"endTime\": end\r\n            }).then((res) => {\r\n                if (res) {\r\n                    console.log('Se creo el evento ' + event.title);\r\n                    this.readEventsfromGCal()\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    openEditModal = (ev) => {\r\n        this.setState({ openEdit: true, actualEvent: ev });\r\n    }\r\n\r\n    closeEditModal = (event) => {\r\n        this.setState({ openEdit: false });\r\n        if (event.ready || event.delete) {\r\n            if (event.delete) {\r\n                this.deleteEvent({ event: this.state.actualEvent })\r\n            } else {\r\n                this.editEvent({ event: this.state.actualEvent, start: event.start, end: event.end })\r\n            }\r\n        }\r\n    }\r\n\r\n    editEvent = ({ event, start, end }) => {\r\n        const { events } = this.state\r\n        const idx = events.indexOf(event)\r\n        let newEvent = { ...event, start, end }\r\n        const nextEvents = [...events]\r\n        nextEvents.splice(idx, 1, newEvent)\r\n        this.setState({\r\n            events: nextEvents,\r\n        })\r\n        // BigCal date is an Date object \"Sat Jan 12 2019 12:00:00 GMT-0600 (hora estándar central)\"\r\n        // we need to conver to ISOString \"2019-01-12T18:00:00.000Z\" for GCal\r\n        let newStart = newEvent.start.toISOString()\r\n        let newEnd = newEvent.end.toISOString()\r\n        newEvent = { ...event, start: newStart, end: newEnd }\r\n        const updateEvent = firebase.functions().httpsCallable('updateEvent');\r\n        updateEvent({ ...newEvent })\r\n            .then(res => {\r\n                if (res) {\r\n                    console.log('Se edito el evento ' + event.title);\r\n                    this.readEventsfromGCal()\r\n                }\r\n            })\r\n    }\r\n\r\n    deleteEvent = ({ event }) => {\r\n        const deleteEvent = firebase.functions().httpsCallable('deleteEventFromCalendar')\r\n        deleteEvent({ eventId: event.id }).then((res) => {\r\n            console.log('Se elimino el evento ' + event.title);\r\n            this.readEventsfromGCal();\r\n        })\r\n    }\r\n\r\n    render = () =>\r\n        <div>\r\n            <DragAndDropCalendar\r\n                selectable\r\n                localizer={localizer}\r\n                events={this.state.events}\r\n                onEventDrop={this.editEvent}\r\n                onSelectSlot={this.openCreateModal}\r\n                onSelectEvent={this.openEditModal}\r\n                defaultView={BigCalendar.Views.WEEK}\r\n                step={15}\r\n                timeslots={4}\r\n                min={new Date('2019, 1, 1, 08:00')}\r\n                max={new Date('2019, 1, 1, 20:00')}\r\n                style={{ height: \"100vh\" }} />\r\n            {this.state.actualEvent ? (\r\n                <div>\r\n                    <Event title=\"New Event\" textbtn=\"Create\" ready={false} delete={false} delbtn={false} open={this.state.openCreate} event={this.state.actualEvent} onClose={this.createEvent} />\r\n                    <Event title=\"Edit Event\" textbtn=\"Edit\" ready={false} delete={false} delbtn={true} open={this.state.openEdit} event={this.state.actualEvent} onClose={this.closeEditModal} />\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n}","import React, { Component } from 'react';\r\n\r\nimport Calendar from './Calendar';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"calendar\" >\r\n                    <Calendar />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst UserProfile = (props) => {\r\n    return (\r\n        <div className=\"userprofile\" >\r\n            <h2>User with id: {props.match.params.id}</h2>\r\n            <Link to='/' > <Button> Go back to Dashboard </Button> </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { Card, FormControl, InputLabel, Input, Button, CardHeader } from '@material-ui/core';\r\n\r\nexport class SignUp extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        authError: null\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => {\r\n                this.setState({\r\n                    authError: null\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    authError: err.message\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup\">\r\n                <Card className=\"card\">\r\n                    <CardHeader title=\"Sign Up\" className=\"cardheader\" />\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <FormControl className=\"emailinput\" margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"firstName\">First Name</InputLabel>\r\n                            <Input id=\"firstName\" name=\"firstName\" autoComplete=\"firstName\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"lastName\">Last Name</InputLabel>\r\n                            <Input id=\"lastName\" name=\"lastName\" autoComplete=\"lastName\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        {this.state.authError ? <p className=\"errormsg\" >{this.state.authError}</p> : null}\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >Sign up</Button>\r\n                        <Link className=\"linkto\" to='/signin' >Sign in</Link>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Import Components\r\nimport NavBar from './NavBar';\r\nimport Dashboard from './Dashboard';\r\nimport UserProfile from './UserProfile';\r\nimport SignUp from './SignUp';\r\n\r\nexport class Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <BrowserRouter basename={process.env.PUBLIC_URL} >\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/db\" />} />\r\n                        <Route path=\"/db\" component={Dashboard} />\r\n                        <Route path=\"/signup\" component={SignUp} />\r\n                        <Route path=\"/user/:id\" component={UserProfile} />\r\n                        <Route path=\"*\" render={() => <Redirect to=\"/db\" />} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { Card, FormControl, InputLabel, Input, Button, CardHeader } from '@material-ui/core';\r\n\r\nexport class SignIn extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        authError: null\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => {\r\n                this.setState({\r\n                    authError: null\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    authError: err.message\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signin\">\r\n                <Card className=\"card\">\r\n                    <CardHeader title=\"Sign In\" className=\"cardheader\" />\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <FormControl className=\"emailinput\" margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        {this.state.authError ? <p className=\"errormsg\" >{this.state.authError}</p> : null}\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >Sign in</Button>\r\n                        <Link className=\"linkto\" to='/signup' >Sign up</Link>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Firebase\r\nimport firebase from 'firebase/app';\r\nimport fbconfig from '../fbconfig';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\n\r\nimport Layout from './Layout';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\n\r\nconst fb = firebase.initializeApp(fbconfig);\r\n\r\nexport class Main extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fb.auth().onAuthStateChanged(user => {\r\n            this.setState({ user })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n        return (\r\n            <div className=\"main\">\r\n                <BrowserRouter basename={process.env.PUBLIC_URL} >\r\n                    {user ?\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Layout} />\r\n                            <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\r\n                        </Switch>\r\n                        :\r\n                        <Switch>\r\n                            <Route exact path=\"/signin\" component={SignIn} />\r\n                            <Route exact path=\"/signup\" component={SignUp} />\r\n                            <Route path=\"*\" render={() => <Redirect to=\"/signin\" />} />\r\n                        </Switch>\r\n                    }\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","export default {\r\n    apiKey: \"AIzaSyBLgnrnoI1i_XF1O5xdSf3nnXRYEJ83krk\",\r\n    authDomain: \"authreact-tuto.firebaseapp.com\",\r\n    databaseURL: \"https://authreact-tuto.firebaseio.com\",\r\n    projectId: \"authreact-tuto\",\r\n    storageBucket: \"authreact-tuto.appspot.com\",\r\n    messagingSenderId: \"942976975988\"\r\n};\r\n","import React, { Component } from 'react';\r\n\r\n// Import Material theme provider\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Import Components\r\nimport Main from './components/Main.jsx';\r\n\r\n// Import SCSS files\r\nimport variables from './index.scss';\r\nimport './css/dashboard.scss';\r\nimport './css/navbar.scss';\r\nimport './css/signs.scss';\r\nimport './css/eventModal.scss';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Main />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\n// Theme config\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: variables.primary },\r\n    secondary: { main: variables.secondary }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#f44336\",\"secondary\":\"#cddc39\"};"],"sourceRoot":""}