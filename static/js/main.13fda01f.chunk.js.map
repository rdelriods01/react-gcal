{"version":3,"sources":["index.scss","css/dashboard.scss","serviceWorker.js","components/NavBar.jsx","components/Event.jsx","components/Calendar.jsx","components/Dashboard.jsx","components/UserProfile.jsx","components/Layout.jsx","App.js","components/SignIn.jsx","components/SignUp.jsx","NoSigned.js","index.js","fbconfig.js"],"names":["module","exports","primary","secondary","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","NavBar","logout","firebase","auth","signOut","console","log","react_default","a","createElement","className","index_es","position","Icon_default","Link","to","onClick","this","Component","Event","state","title","mapPropsToState","_this","setState","delbtn","props","delete","start","event","end","handleTitleChange","ev","Object","defineProperty","target","id","value","handleTimeChange","date","time","mins","getMinutes","hours","getHours","newDate","Date","setHours","setMinutes","handleSubmit","preventDefault","open","onClose","handleDelete","handleClose","_this2","aria-labelledby","onRendered","onSubmit","margin","required","fullWidth","htmlFor","name","autoComplete","autoFocus","onChange","material_ui_time_picker_lib_default","type","variant","color","textbtn","React","localizer","BigCalendar","momentLocalizer","moment","DragAndDropCalendar","withDragAndDrop","Calendar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","readEventsfromGCal","functions","httpsCallable","readEvents","maxResults","res","events","data","map","newStart","dateTime","newEnd","push","summary","meta","openCreateModal","openCreate","actualEvent","createEvent","toISOString","addEvent","eventName","startTime","endTime","openEditModal","openEdit","closeEditModal","deleteEvent","editEvent","_ref","idx","indexOf","newEvent","objectSpread","nextEvents","toConsumableArray","splice","updateEvent","_ref2","eventId","render","selectable","onEventDrop","onSelectSlot","onSelectEvent","defaultView","Views","WEEK","step","timeslots","min","max","style","height","Event_Event","bind","assertThisInitialized","setInterval","Dashboard","Calendar_Calendar","UserProfile","params","Layout","_Component","apply","arguments","inherits","createClass","key","components_NavBar","BrowserRouter","basename","process","Switch","Route","exact","path","Redirect","component","App","styles","theme","createMuiTheme","palette","main","variables","typography","useNextVariants","SignIn","_getPrototypeOf2","_len","length","args","Array","_key","concat","email","password","authError","handleChange","signInWithEmailAndPassword","catch","err","message","SignUp","firstName","lastName","createUserWithEmailAndPassword","NoSigned","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","onAuthStateChanged","user","ReactDOM","src_App","document","getElementById","src_NoSigned"],"mappings":"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","file":"static/js/main.13fda01f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#f44336\",\"secondary\":\"#cddc39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#f44336\",\"secondary\":\"#cddc39\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { AppBar, Toolbar, IconButton, Button } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nclass NavBar extends Component {\r\n\r\n    logout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n        console.log();\r\n\r\n        return (\r\n            <div className=\"navbar\"  >\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton>\r\n                            <Icon> menu </Icon>\r\n                        </IconButton>\r\n                        <Link className=\"element\" to='/db' >myReactapp v1</Link>\r\n                        <Link className=\"btn\" to='/db' ><Button onClick={this.logout} > Log Out </Button></Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport TimeInput from 'material-ui-time-picker'\r\n\r\nimport { Button, FormControl, Input, InputLabel, Modal, IconButton } from '@material-ui/core';\r\n\r\nexport default class Event extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n    };\r\n\r\n    mapPropsToState = () => {\r\n        this.setState({\r\n            delbtn: this.props.delbtn,\r\n            ready: this.props.ready,\r\n            delete: this.props.delete,\r\n            start: this.props.event.start,\r\n            end: this.props.event.end,\r\n            title: this.props.event.title,\r\n        });\r\n    }\r\n    handleTitleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n    }\r\n    handleTimeChange = (date, time) => {\r\n        var mins = date.getMinutes();\r\n        var hours = date.getHours();\r\n        var newDate = new Date(this.state[time]);\r\n        newDate.setHours(hours)\r\n        newDate.setMinutes(mins)\r\n        this.setState({ [time]: newDate });\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.setState({ open: false, ready: true }, () => {\r\n            this.props.onClose(this.state);\r\n        })\r\n    }\r\n    handleDelete = () => {\r\n        this.setState({ open: false, delete: true }, () => {\r\n            this.props.onClose(this.state);\r\n        });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false }, () => {\r\n            this.props.onClose(this.state);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                onRendered={this.mapPropsToState}\r\n            >\r\n                <div className=\"eventModal\"  >\r\n                    <div className=\"header\" >\r\n                        <h3 id=\"form-dialog-title\"> {this.props.title} </h3>\r\n                        {this.state.delbtn ? <IconButton onClick={this.handleDelete} ><i className=\"material-icons\">delete</i></IconButton > : <div></div>}\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <FormControl className=\"titleinput\" margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"title\">Event title</InputLabel>\r\n                            <Input id=\"title\" name=\"title\" autoComplete=\"title\" autoFocus onChange={this.handleTitleChange} value={this.state.title} />\r\n                        </FormControl>\r\n                        <div className=\"pickers\">\r\n                            <span>Start time</span>\r\n                            <span>End time</span>\r\n                            <TimeInput\r\n                                className=\"timepicker\"\r\n                                value={this.state.start}\r\n                                onChange={(date) => this.handleTimeChange(date, 'start')}\r\n                            />\r\n                            <TimeInput\r\n                                className=\"timepicker\"\r\n                                value={this.state.end}\r\n                                onChange={(date) => this.handleTimeChange(date, 'end')}\r\n                            />\r\n                        </div>\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >{this.props.textbtn} </Button>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport BigCalendar from 'react-big-calendar'\r\nimport firebase from 'firebase/app';\r\n\r\nimport Event from './Event';\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/es-us'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar)\r\n\r\nexport default class Calendar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            events: [],\r\n            openCreate: false,\r\n            openEdit: false,\r\n            actualEvent: null\r\n        }\r\n        this.editEvent = this.editEvent.bind(this)\r\n        this.openCreateModal = this.openCreateModal.bind(this)\r\n        this.openEditModal = this.openEditModal.bind(this)\r\n        this.readEventsfromGCal();\r\n        setInterval(this.readEventsfromGCal, 3600000)\r\n    }\r\n\r\n    readEventsfromGCal = () => {\r\n        const readEvents = firebase.functions().httpsCallable('readEvents');\r\n        readEvents({ maxResults: 250 }).then(res => {\r\n            let events = [];\r\n            res.data.map(event => {\r\n                // GCal date is an ISO string \"2019-01-12T18:00:00.000Z\" \r\n                // we need to conver to Date object \"Sat Jan 12 2019 12:00:00 GMT-0600 (hora estándar central)\" for BigCal\r\n                const newStart = new Date(event.start.dateTime)\r\n                const newEnd = new Date(event.end.dateTime)\r\n                events.push({\r\n                    title: event.summary,\r\n                    meta: event,\r\n                    start: newStart,\r\n                    end: newEnd,\r\n                    id: event.id\r\n                })\r\n                return events\r\n            })\r\n            this.setState({ events }, () => console.log(this.state.events))\r\n        })\r\n    }\r\n\r\n    openCreateModal = (ev) => {\r\n        this.setState({ openCreate: true, actualEvent: { start: ev.start, end: ev.end, title: '' } });\r\n    }\r\n    createEvent = (event) => {\r\n        this.setState({ openCreate: false });\r\n        if (event.ready) {\r\n            // let newEvent = {\r\n            //     title: event.title,\r\n            //     start: event.start,\r\n            //     end: event.end,\r\n            // }\r\n            // this.setState({\r\n            //     events: this.state.events.concat([newEvent]),\r\n            // })\r\n            // BigCal date is an Date object \"Sat Jan 12 2019 12:00:00 GMT-0600 (hora estándar central)\"\r\n            // we need to conver to ISOString \"2019-01-12T18:00:00.000Z\" for GCal\r\n            let start = event.start.toISOString()\r\n            let end = event.end.toISOString()\r\n            const addEvent = firebase.functions().httpsCallable('addEventToCalendar');\r\n            addEvent({\r\n                \"eventName\": event.title,\r\n                \"startTime\": start,\r\n                \"endTime\": end\r\n            }).then((res) => {\r\n                if (res) {\r\n                    console.log('Se creo el evento ' + event.title);\r\n                    this.readEventsfromGCal()\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    openEditModal = (ev) => {\r\n        this.setState({ openEdit: true, actualEvent: ev });\r\n    }\r\n\r\n    closeEditModal = (event) => {\r\n        this.setState({ openEdit: false });\r\n        if (event.ready || event.delete) {\r\n            if (event.delete) {\r\n                this.deleteEvent({ event: this.state.actualEvent })\r\n            } else {\r\n                this.editEvent({ event: this.state.actualEvent, start: event.start, end: event.end })\r\n            }\r\n        }\r\n    }\r\n\r\n    editEvent = ({ event, start, end }) => {\r\n        const { events } = this.state\r\n        const idx = events.indexOf(event)\r\n        let newEvent = { ...event, start, end }\r\n        const nextEvents = [...events]\r\n        nextEvents.splice(idx, 1, newEvent)\r\n        this.setState({\r\n            events: nextEvents,\r\n        })\r\n        // BigCal date is an Date object \"Sat Jan 12 2019 12:00:00 GMT-0600 (hora estándar central)\"\r\n        // we need to conver to ISOString \"2019-01-12T18:00:00.000Z\" for GCal\r\n        let newStart = newEvent.start.toISOString()\r\n        let newEnd = newEvent.end.toISOString()\r\n        newEvent = { ...event, start: newStart, end: newEnd }\r\n        const updateEvent = firebase.functions().httpsCallable('updateEvent');\r\n        updateEvent({ ...newEvent })\r\n            .then(res => {\r\n                if (res) {\r\n                    console.log('Se edito el evento ' + event.title);\r\n                    this.readEventsfromGCal()\r\n                }\r\n            })\r\n    }\r\n\r\n    deleteEvent = ({ event }) => {\r\n        const deleteEvent = firebase.functions().httpsCallable('deleteEventFromCalendar')\r\n        deleteEvent({ eventId: event.id }).then((res) => {\r\n            console.log('Se elimino el evento ' + event.title);\r\n            this.readEventsfromGCal();\r\n        })\r\n    }\r\n\r\n    render = () =>\r\n        <div>\r\n            <DragAndDropCalendar\r\n                selectable\r\n                localizer={localizer}\r\n                events={this.state.events}\r\n                onEventDrop={this.editEvent}\r\n                onSelectSlot={this.openCreateModal}\r\n                onSelectEvent={this.openEditModal}\r\n                defaultView={BigCalendar.Views.WEEK}\r\n                step={15}\r\n                timeslots={4}\r\n                min={new Date('2019, 1, 1, 08:00')}\r\n                max={new Date('2019, 1, 1, 20:00')}\r\n                style={{ height: \"100vh\" }} />\r\n            {this.state.actualEvent ? (\r\n                <div>\r\n                    <Event title=\"New Event\" textbtn=\"Create\" ready={false} delete={false} delbtn={false} open={this.state.openCreate} event={this.state.actualEvent} onClose={this.createEvent} />\r\n                    <Event title=\"Edit Event\" textbtn=\"Edit\" ready={false} delete={false} delbtn={true} open={this.state.openEdit} event={this.state.actualEvent} onClose={this.closeEditModal} />\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n}","import React, { Component } from 'react';\r\n\r\nimport Calendar from './Calendar';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"calendar\" >\r\n                    <Calendar />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst UserProfile = (props) => {\r\n    return (\r\n        <div className=\"userprofile\" >\r\n            <h2>User with id: {props.match.params.id}</h2>\r\n            <Link to='/' > <Button> Go back to Dashboard </Button> </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Import Components\r\nimport NavBar from './NavBar';\r\nimport Dashboard from './Dashboard';\r\nimport UserProfile from './UserProfile';\r\n\r\nexport class Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <BrowserRouter basename={process.env.PUBLIC_URL} >\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/db\" />} />\r\n                        <Route path=\"/db\" component={Dashboard} />\r\n                        <Route path=\"/user/:id\" component={UserProfile} />\r\n                        <Route path=\"*\" render={() => <Redirect to=\"/db\" />} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Import Material theme provider\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Import Components\r\nimport Layout from './components/Layout';\r\n\r\n// Import SCSS files\r\nimport variables from './index.scss';\r\nimport './css/dashboard.scss';\r\nimport './css/navbar.scss';\r\nimport './css/signs.scss';\r\nimport './css/eventModal.scss';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Layout} />\r\n            <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\n// Theme config\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: variables.primary },\r\n    secondary: { main: variables.secondary }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { Card, FormControl, InputLabel, Input, Button, CardHeader } from '@material-ui/core';\r\n\r\nexport class SignIn extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        authError: null\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => {\r\n                this.setState({\r\n                    authError: null\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    authError: err.message\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signin\">\r\n                <Card className=\"card\">\r\n                    <CardHeader title=\"Sign In\" className=\"cardheader\" />\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <FormControl className=\"emailinput\" margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        {this.state.authError ? <p className=\"errormsg\" >{this.state.authError}</p> : null}\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >Sign in</Button>\r\n                        <Link className=\"linkto\" to='/signup' >Sign up</Link>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { Card, FormControl, InputLabel, Input, Button, CardHeader } from '@material-ui/core';\r\n\r\nexport class SignUp extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        authError: null\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => {\r\n                this.setState({\r\n                    authError: null\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    authError: err.message\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup\">\r\n                <Card className=\"card\">\r\n                    <CardHeader title=\"Sign Up\" className=\"cardheader\" />\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <FormControl className=\"emailinput\" margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"firstName\">First Name</InputLabel>\r\n                            <Input id=\"firstName\" name=\"firstName\" autoComplete=\"firstName\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"lastName\">Last Name</InputLabel>\r\n                            <Input id=\"lastName\" name=\"lastName\" autoComplete=\"lastName\" onChange={this.handleChange} />\r\n                        </FormControl>\r\n                        {this.state.authError ? <p className=\"errormsg\" >{this.state.authError}</p> : null}\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >Sign up</Button>\r\n                        <Link className=\"linkto\" to='/signin' >Sign in</Link>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Import Material theme provider\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Import Components\r\nimport SignIn from './components/SignIn';\r\nimport SignUp from './components/SignUp';\r\n\r\n// Import SCSS files\r\nimport variables from './index.scss';\r\nimport './css/signs.scss';\r\n\r\n\r\nclass NoSigned extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/signin\" component={SignIn} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route path=\"*\" render={() => <Redirect to=\"/signin\" />} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\n// Theme config\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: variables.primary },\r\n    secondary: { main: variables.secondary }\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nexport default NoSigned;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Firebase\r\nimport firebase from 'firebase/app';\r\nimport fbconfig from './fbconfig';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\n\r\n// Main React Class Components\r\nimport App from './App';\r\nimport NoSigned from './NoSigned';\r\n\r\n// Styles\r\nimport './index.scss';\r\n\r\nconst fb = firebase.initializeApp(fbconfig);\r\n\r\nfb.auth().onAuthStateChanged(user => {\r\n    if (user) {\r\n        ReactDOM.render(<App />, document.getElementById('root'));\r\n        serviceWorker.unregister();\r\n    } else {\r\n        ReactDOM.render(<NoSigned />, document.getElementById('root'));\r\n        serviceWorker.unregister();\r\n    }\r\n})\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n","export default {\r\n    apiKey: \"AIzaSyBLgnrnoI1i_XF1O5xdSf3nnXRYEJ83krk\",\r\n    authDomain: \"authreact-tuto.firebaseapp.com\",\r\n    databaseURL: \"https://authreact-tuto.firebaseio.com\",\r\n    projectId: \"authreact-tuto\",\r\n    storageBucket: \"authreact-tuto.appspot.com\",\r\n    messagingSenderId: \"942976975988\"\r\n};\r\n"],"sourceRoot":""}